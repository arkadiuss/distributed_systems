# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.3
#
# <auto-generated>
#
# Generated from file `Device.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module IotController
_M_IotController = Ice.openModule('IotController')
__name__ = 'IotController'

_M_IotController._t_Device = IcePy.defineValue('::IotController::Device', Ice.Value, -1, (), False, True, None, ())

if 'DevicePrx' not in _M_IotController.__dict__:
    _M_IotController.DevicePrx = Ice.createTempClass()
    class DevicePrx(Ice.ObjectPrx):

        def getId(self, context=None):
            return _M_IotController.Device._op_getId.invoke(self, ((), context))

        def getIdAsync(self, context=None):
            return _M_IotController.Device._op_getId.invokeAsync(self, ((), context))

        def begin_getId(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_IotController.Device._op_getId.begin(self, ((), _response, _ex, _sent, context))

        def end_getId(self, _r):
            return _M_IotController.Device._op_getId.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_IotController.DevicePrx.ice_checkedCast(proxy, '::IotController::Device', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_IotController.DevicePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::IotController::Device'
    _M_IotController._t_DevicePrx = IcePy.defineProxy('::IotController::Device', DevicePrx)

    _M_IotController.DevicePrx = DevicePrx
    del DevicePrx

    _M_IotController.Device = Ice.createTempClass()
    class Device(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::IotController::Device')

        def ice_id(self, current=None):
            return '::IotController::Device'

        @staticmethod
        def ice_staticId():
            return '::IotController::Device'

        def getId(self, current=None):
            raise NotImplementedError("servant method 'getId' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_IotController._t_DeviceDisp)

        __repr__ = __str__

    _M_IotController._t_DeviceDisp = IcePy.defineClass('::IotController::Device', Device, (), None, ())
    Device._ice_type = _M_IotController._t_DeviceDisp

    Device._op_getId = IcePy.Operation('getId', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_int, False, 0), ())

    _M_IotController.Device = Device
    del Device

# End of module IotController
